@using TFG.RulesPenaltiesF1.Core.Entities.CompetitionAggregate;
@using TFG.RulesPenaltiesF1.Web.ViewModels.Penalties;
@model List<IncidentViewModel>

@{
    ViewData["Title"] = "Incidents";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var drivers = (List<DriverViewModel>)(ViewBag.Drivers);
}

<h1>Incidents</h1>

<form asp-action="Index" method="get">
    <p>
        <span>Driver</span>
        <select  value="Driver" name="driver" class="btn btn-default border">
            <option label="----------"></option>
            @foreach(var driver in drivers)
            {
                if ((int?)ViewData["Driver"] is not null && driver.Id == (int)ViewData["Driver"]!)
                {
                    <option selected value="@driver.Id">@driver.Name</option>
                }
                else
                {
                    <option value="@driver.Id">@driver.Name</option>
                }
            }
        </select>
        <span>Session</span>
        <select value="Session" name="session" class="btn btn-default border">
            <option label="----------"></option>
            @foreach(var session in SessionTypeEnum.List)
            {
                if ((int?)ViewData["Session"] is not null && session.Value == (int)ViewData["Session"]!)
                {
                    <option selected value="@session.Value">@session.Name</option>
                }
                else
                {
                    <option value="@session.Value">@session.Name</option>
                }
            }
        </select>
        <input type="submit" value="Apply Filters" class="btn btn-outline-info" />
        <a asp-action="Index" class="btn btn-outline-warning">Reset Filters</a>
    </p>
</form>

@if(Model.Count != 0)
{
    <table class="table mt-1">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Year</a>
                </th>
                <th>
                    Competition
                </th>
                <th>
                    Session
                </th>
                <th>
                    Driver
                </th>
                <th>
                    Competitor
                </th>
                <th>
                    Decision
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var incident in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(s => incident.Session!.Competition!.Year)
                    </td>
                    <td>
                        @Html.DisplayFor(s => incident.Session!.Competition!.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(s => incident.Session!.Type!.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(i => incident.Driver!.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(i => incident.Competitor!.Name)
                    </td>
                    @if (incident.Penalty is null)
                    {
                        <td>No further action</td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(i => incident.Penalty.Name)</td>
                    }
                    <td>
                        <a asp-action="Details" asp-route-id="@incident.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h4>There are no incidents that match the specified filters.</h4>
}
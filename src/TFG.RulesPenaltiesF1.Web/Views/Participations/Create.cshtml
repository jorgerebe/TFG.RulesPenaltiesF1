@model ParticipationInputViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Add Participations</h1>

<h4>@Model.Competition!.Name - @Model.Competition.Year</h4>
<h5>@Model.Competitor!.Name</h5>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mt-4">
                <input type="hidden" asp-for="CompetitionId" value="@Model.CompetitionId"/>
                <input type="hidden" asp-for="CompetitorId" value="@Model.CompetitorId"/>
			    @Html.LabelFor(m => m.DriverIds, new { })
			    @{

				    var driversList = ((List<DriverViewModel>)ViewBag.Drivers).Select(a => new SelectListItem
				    {
					    Value = a.Id.ToString(),
					    Text =  a.Name
				    });
			    }
			    @Html.ListBoxFor(m => m.DriverIds, driversList, new { @class = "form-control", @multiple = "multiple", @size=6 })

			    @Html.ValidationMessageFor(m => m.DriverIds, "", new { @class = "text-danger" })
		    </div>
            <div class="form-group mt-4">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <br/>
    <a asp-controller="Competitions" asp-action="Details" asp-route-id="@Model.CompetitionId">Back to Competition</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

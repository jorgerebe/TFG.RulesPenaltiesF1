@model RegulationViewModel

@using Microsoft.AspNetCore.Html;
@using TFG.RulesPenaltiesF1.Web.ViewModels;
@using TFG.RulesPenaltiesF1.Web.ViewModels.Penalties

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Regulation</h4>
<hr />
<div class="row">
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
		<div class="form-group mt-4">
			@Html.LabelFor(m => m.Articles, new { @class = "control-label" })
			@{

				var articlesList = ((List<ArticleViewModel>)ViewBag.Articles).Select(a => new SelectListItem
				{
					Value = a.Id.ToString(),
					Text =  a.ToString()
				});
			}
			@Html.ListBoxFor(m => m.Articles, articlesList, new { @class = "form-control articles", @multiple = "multiple" })

			@Html.ValidationMessageFor(m => m.Articles, "", new { @class = "text-danger" })
		</div>

		<div class="form-group mt-4">
			@Html.LabelFor(m => m.Penalties, new { @class = "control-label" })
			@{

				var penaltiesList = ((List<PenaltyViewModel>)ViewBag.Penalties).Select(a => new SelectListItem
				{
					Value = a.Id.ToString(),
					Text =  a.Name + ": " + a.ToString()
				});
			}
			@Html.ListBoxFor(m => m.Penalties, penaltiesList, new { @class = "form-control", @multiple = "multiple", @size=6 })

			@Html.ValidationMessageFor(m => m.Penalties, "", new { @class = "text-danger" })
		</div>

        <div class="form-group mt-3">
			<input type="submit" value="Create" class="btn btn-primary" id="submit" />
			<input type="reset" onclick="resetForm()" value="Reset" class="btn btn-secondary" id="resetButton" />
		</div>
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
